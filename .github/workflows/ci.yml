name: Rust Workspace CI (fmt + clippy)

on:
  push:
    branches:
      - main
      - develop
      - "*"
  pull_request:

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always

jobs:
  fmt:
    name: rustfmt (check)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust (stable) with rustfmt
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt

      - name: rustfmt --check (workspace)
        run: cargo fmt --all -- --check

  clippy:
    name: clippy (lint workspace)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust (stable) with clippy
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy

      - name: Cache cargo registry, git, and target
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: cargo clippy (allow warnings)
        run: cargo clippy --workspace --all-targets --all-features

  grammar_validation:
    name: pest grammar validation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust (stable)
        uses: dtolnay/rust-toolchain@stable

      - name: Cache cargo registry, git, and target
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-validation-${{ hashFiles('scripts/Cargo.lock', 'scripts/Cargo.toml') }}
          restore-keys: |
            ${{ runner.os }}-cargo-validation-

      - name: Validate Pest grammar
        run: |
          cd scripts
          cargo run --bin validate_grammar
